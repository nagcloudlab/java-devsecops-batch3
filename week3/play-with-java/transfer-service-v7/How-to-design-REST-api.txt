


1. Resource identification in requests  : by using URI

    /api/v1/accounts
    /api/v1/accounts/{accountId}
    /api/v1/accounts/{accountId}/transfer_history

    /api/v1/transfer

2. Resource manipulation through representations:

    -> XML | JSON | HTML | Plain Text


3. Self-descriptive  messages:

    -> Each message should contain enough information to describe how to process it.

    Example:
    - HTTP Method (GET, POST, PUT, DELETE)
    - Headers (Content-Type, Accept)
    - Status Codes (200 OK, 404 Not Found, 500 Internal Server Error)


    Http Methods
    ---------------

    -> for read requests,

        GET     -> to read resource payload
        HEAD    -> to read resource metadata
        OPTIONS -> to read resource capabilities

    -> for write requests,

        POST    -> to create a new resource
        PUT     -> to update an existing resource
        PATCH   -> to partially update an existing resource
        DELETE  -> to delete a resource


    Http Headers
    ---------------

    -> Content-Type: Specifies the media type of the resource being sent in the request body.
    -> Accept: Specifies the media type(s) that the client is willing to receive in the response.
    -> Authorization: Contains credentials for authenticating the client.
    ....

    Http Status Codes
    ---------------

    100s - Informational
    200s - Success
        200 OK
        201 Created
        204 No Content
    300s  - Redirection
        301 Moved Permanently
        302 Found
    400 - Client Error
        400 Bad Request
        401 Unauthorized
        403 Forbidden
        404 Not Found
    500s - ServerError
        500 Internal Server Error
        502 Bad Gateway
        503 Service Unavailable

4. Hypermedia as the engine of application state (HATEOAS)


--------------------------------------------------------------


Request:
POST /api/v1/transfer
{
    "from_account_id": "12345",
    "to_account_id": "67890",
    "amount": 100.00,
    "currency": "USD"
}
Response:
HTTP/1.1 200 Ok
{
    "status": "success",
    "transaction_id": "abc123",
    "message": "Transfer completed successfully."
}


---------------------------------------------------------------

How to implement REST API in Java?


2 options:

    - JAX-RS (Java API for RESTful Web Services)
         - REASTEasy from JBoss
    - Spring Boot  (Spring Web)







