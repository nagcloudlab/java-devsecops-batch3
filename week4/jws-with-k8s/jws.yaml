
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jws-deployment
spec:
  replicas: 10
  selector:
    matchLabels:
      app: jws-app
  template:
    metadata:
      labels:
        app: jws-app
    spec:
      containers:
      - name: jws-container
        image: docker.io/nagabhushanamn/java-web-service:v3

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
spec:
  serviceName: postgres-service
  replicas: 3
  selector:
    matchLabels:
      app: postgres-app
  template:
    metadata:
      labels:
        app: postgres-app
    spec:
      containers:
      - name: postgres-container
        image: docker.io/postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "mydb"
        volumeMounts:
        - name: postgres-volume
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-volume
        emptyDir: {}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: prometheus-daemonset
spec:
  selector:
    matchLabels:
      app: prometheus-app
  template:
    metadata:
      labels:
        app: prometheus-app
    spec:
      containers:
      - name: prometheus-container
        image: docker.io/prom/prometheus:latest
        ports:
        - containerPort: 9090

---

apiVersion: batch/v1
kind: Job
metadata:
  name: data-migration-job
spec:
  template:
    spec:
      containers:
      - name: migration-container
        image: busybox:latest
        command: ["sh", "-c", "echo 'Running data migration...' && sleep 10"]
      restartPolicy: OnFailure
      
# ---

# apiVersion: batch/v1
# kind: CronJob
# metadata:
#   name: daily-backup-cronjob
# spec:
#   schedule: "* * * * *"  # Every minute for testing purposes
#   jobTemplate:
#     spec:
#       template:
#         spec:
#           containers:
#           - name: backup-container
#             image: busybox:latest
#             command: ["sh", "-c", "echo 'Running daily backup...' && sleep 10"]
#           restartPolicy: OnFailure


--- 

apiVersion: v1
kind: Service
metadata:
  name: jws-service
spec:
  selector:
    app: jws-app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30080
  type: NodePort   